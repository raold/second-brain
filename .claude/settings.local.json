{
  "permissions": {
    "allow": [
      "Bash(/Users/dro/Documents/second-brain/.venv/bin/python -m pytest tests/ --tb=no -q --co -q)",
      "Bash(source:*)",
      "Bash(/Users/dro/Library/CloudStorage/GoogleDrive-dro@lynchburgsmiles.com/My Drive/projects/second-brain/venv/bin/python -m pip install fastapi uvicorn pydantic aiohttp)",
      "Bash(/Users/dro/Library/CloudStorage/GoogleDrive-dro@lynchburgsmiles.com/My\\ Drive/projects/second-brain/venv/bin/python -m pip install:*)",
      "Bash(/Users/dro/Library/CloudStorage/GoogleDrive-dro@lynchburgsmiles.com/My Drive/projects/second-brain/venv/bin/python -m pip install openai anthropic redis python-multipart)",
      "Bash(/Users/dro/Library/CloudStorage/GoogleDrive-dro@lynchburgsmiles.com/My Drive/projects/second-brain/venv/bin/python -m pip install asyncpg)",
      "Bash(/opt/homebrew/bin/python3:*)",
      "Bash(cd:*)",
      "Bash(docker system prune:*)",
      "Bash(docker volume prune:*)",
      "Bash(venv/bin/python scripts/test_runner.py:*)",
      "Bash(TEST_DATABASE_URL=\"postgresql://secondbrain:changeme@localhost/secondbrain\" venv/bin/python scripts/test_runner.py --integration)",
      "Bash(venv/bin/pip install:*)",
      "Bash(TEST_DATABASE_URL=\"postgresql://secondbrain:changeme@localhost/secondbrain\" venv/bin/python -m pytest tests/unit/test_postgres_backend.py -v)",
      "Bash(TEST_DATABASE_URL=\"postgresql://secondbrain:changeme@localhost/secondbrain\" venv/bin/python -m pytest tests/unit/test_postgres_backend.py::test_create_memory -v -s)",
      "Bash(TEST_DATABASE_URL=\"postgresql://secondbrain:changeme@localhost/secondbrain\" venv/bin/python -m pytest tests/unit/test_postgres_backend.py::test_create_memory -v)",
      "Bash(venv/bin/python -m pytest tests/integration/test_postgres_live.py -v)",
      "Bash(venv/bin/python -m pytest tests/integration/test_postgres_live.py::TestPostgreSQLLive::test_database_connection -v)",
      "Bash(venv/bin/python -m pytest tests/integration/test_postgres_live.py::TestPostgreSQLLive::test_database_connection -v -s)",
      "Bash(venv/bin/python:*)",
      "Bash(gh run list:*)",
      "Bash(gh run view:*)",
      "Bash(yamllint:*)",
      "Bash(gh release view:*)",
      "Bash(gh release edit:*)",
      "Bash(npm create:*)",
      "Bash(npx sv create:*)",
      "Bash(find:*)",
      "Bash(.venv/bin/python -m pytest tests/ --tb=no -q --co -q)",
      "Bash(sqlite3:*)",
      "Bash(python3:*)",
      "Bash(.venv_new/bin/pip install:*)",
      "Bash(rm:*)",
      "Bash(mv:*)",
      "Bash(git:*)",
      "Bash(.venv/bin/python -m pytest tests/unit/test_basic_functionality.py -v --tb=short)",
      "Bash(.venv/bin/pip install:*)",
      "Bash(apt list:*)",
      "Bash(lsb_release:*)",
      "Bash(cat:*)",
      "Bash(sudo add-apt-repository:*)",
      "Bash(sudo apt:*)",
      "Bash(curl:*)",
      "Bash(.venv/bin/pip:*)",
      "Bash(.venv/bin/python:*)",
      "Bash(grep:*)",
      "Bash(lsof:*)",
      "Bash(pkill:*)",
      "Bash(npm install)",
      "Bash(node:*)",
      "Bash(docker-compose up:*)",
      "Bash(psql:*)",
      "Bash(sudo service:*)",
      "Bash(docker.exe ps:*)",
      "Bash(export DOCKER_HOST=tcp://localhost:2375)",
      "Bash(wsl.exe:*)",
      "Bash(mkdir:*)",
      "Bash(cp:*)",
      "Bash(chmod:*)",
      "Bash(cmd.exe /c start http://localhost:8001/docs)",
      "Bash(pg_isready:*)",
      "Bash(./start_postgres_only.sh:*)",
      "Bash(pip install:*)",
      "Bash(flake8:*)",
      "Bash(echo:*)",
      "Bash(tree:*)",
      "Bash(kill:*)",
      "Bash(bash:*)",
      "Bash(USE_MOCK_DB=true timeout 5 .venv/bin/uvicorn app.main:app --port 8001)",
      "Bash(for:*)",
      "Bash(do if [ -f \"$file\" ])",
      "Bash(then echo \"✅ EXISTS: $file\")",
      "Bash(else echo \"❌ MISSING: $file\")",
      "Bash(fi)",
      "Bash(done)",
      "Bash(python test_gdrive_integration.py:*)",
      "Bash(open http://localhost:8001/static/gdrive-ui.html)",
      "Bash(python test_full_gdrive_flow.py:*)",
      "Bash(true)",
      "Bash(python -m pytest tests/unit/test_basic_functionality.py -v -x)",
      "Bash(black:*)",
      "Bash(isort:*)",
      "Bash(pylint:*)",
      "Bash(pip show:*)",
      "Bash(taskkill:*)",
      "Bash(timeout 30 python llava/llava_api.py)",
      "Bash(cmd.exe:*)",
      "WebFetch(domain:huggingface.co)"
    ],
    "deny": []
  }
}