{
  "permissions": {
    "allow": [
      "Bash(ls:*)",
      "Bash(mkdir:*)",
      "Bash(set PYTHONPATH=.)",
      "Bash(set USE_MOCK_DATABASE=true)",
      "Bash(find:*)",
      "Bash(true)",
      "Bash(mv:*)",
      "Bash(git commit:*)",
      "Bash(del \"C:\\Users\\dro\\second-brain\\verify_version_tests.py\")",
      "Bash(set PYTHONIOENCODING=utf-8)",
      "Bash(git merge:*)",
      "Bash(git push:*)",
      "Bash(git checkout:*)",
      "Bash(python:*)",
      "Bash(git add:*)",
      "Bash(PYTHONPATH=. python -m pytest test_integration_features.py -v --tb=short)",
      "Bash(PYTHONPATH=. python -m pytest tests/ -v --tb=short -x)",
      "Bash(PYTHONPATH=. python -c \"from app.routes.graph_routes import router; print(''graph_routes import successful'')\")",
      "Bash(PYTHONPATH=. python -c \"from app.routes.graph_routes import router; print(''graph_routes import successful'')\")",
      "Bash(PYTHONPATH=. python -c \"from app.routes.analysis_routes import router; print(''analysis_routes import successful'')\")",
      "Bash(PYTHONPATH=. python -m pytest test_integration_features.py test_knowledge_graph_minimal.py test_reasoning_minimal.py -v)",
      "Bash(USE_MOCK_DATABASE=true PYTHONPATH=. python -m pytest test_integration_features.py test_knowledge_graph_minimal.py test_reasoning_minimal.py -v)",
      "Bash(USE_MOCK_DATABASE=true PYTHONPATH=. python test_integration_features.py)",
      "Bash(USE_MOCK_DATABASE=true PYTHONPATH=. python -c \"from app.app import app; print(''âœ… App imports successfully with advanced-analysis features'')\")",
      "Bash(USE_MOCK_DATABASE=true PYTHONPATH=. python -c \"from app.app import app; print(''âœ… App imports successfully with advanced-analysis features'')\")",
      "Bash(USE_MOCK_DATABASE=true PYTHONPATH=. python -m pytest test_integration_features.py -v)",
      "Bash(USE_MOCK_DATABASE=true PYTHONPATH=. python -c \"\nimport asyncio\nfrom app.app import app\nfrom app.ingestion.entity_extractor import EntityExtractor\nfrom app.ingestion.topic_classifier import TopicClassifier\nfrom app.ingestion.domain_classifier import DomainClassifier\nfrom app.routes.graph_routes import router as graph_router\nfrom app.routes.analysis_routes import router as analysis_router\n\nprint(''âœ… All new modules import successfully'')\nprint(f''âœ… Graph routes: {len(graph_router.routes)} endpoints'')\nprint(f''âœ… Analysis routes: {len(analysis_router.routes)} endpoints'')\n\")",
      "Bash(USE_MOCK_DATABASE=true PYTHONPATH=.:*)",
      "Bash(gh release create:*)",
      "Bash(--title \"v2.8.1 - Advanced Content Analysis & NLP\" )",
      "Bash(--notes-file RELEASE_NOTES_v2.8.1.md )",
      "Bash(--latest)",
      "Bash(ruff check:*)",
      "Bash(make lint:*)",
      "Bash(.venv/bin/ruff check .)",
      "Bash(venv/bin/ruff check:*)",
      "Bash(gh run view:*)",
      "Bash(venv/bin/pip install:*)",
      "Bash(venv/bin/python -m pytest tests/unit/test_version_system.py::TestVersionSystem::test_increment_version -v)",
      "Bash(venv/bin/python -m pytest tests/unit/test_version_system.py::TestVersionSystem::test_is_version_compatible -v)",
      "Bash(venv/bin/python -m pytest tests/unit/test_memory_migrations.py -v)",
      "Bash(venv/bin/python -m pytest tests/unit/test_memory_migrations.py::TestAddMemoryTypeClassification::test_get_memories_to_migrate -v)",
      "Bash(does not support the asynchronous context manager protocol\".\n\nðŸ¤– Generated with [Claude Code](https://claude.ai/code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(venv/bin/python -m pytest tests/unit/test_memory_migrations.py tests/unit/test_database_migrations.py tests/unit/test_version_system.py -v)",
      "Bash(venv/bin/python -m pytest tests/unit/test_version_system.py::TestVersionManagerIntegration::test_version_manager_functionality -v)",
      "Bash(.venvScriptspython.exe -m pytest tests/unit/ -v)",
      "Bash(.venv\\Scripts\\python.exe -m pytest tests/unit/ -v)",
      "Bash(make test:*)",
      "Bash(PYTHONPATH=. pytest --cov=app tests/)",
      "Bash(curl:*)",
      "Bash(C:Usersdrosecond-brain.venvScriptspython.exe -m uvicorn app.app:app --reload --port 8001)",
      "Bash(C:Usersdrosecond-brain.venvScriptspython.exe test_server.py)",
      "Bash(C:UsersdroAppDataLocalProgramsPythonPython310python.exe -m pytest tests/unit/domain -v)"
    ],
    "deny": []
  }
}