{
  "cleanupPeriodDays": 30,
  "env": {
    "PYTHONPATH": ".",
    "SECOND_BRAIN_ENV": "development",
    "CLAUDE_CODE_AUTONOMOUS": "true",
    "CLAUDE_NO_CONFIRMATIONS": "true",
    "CLAUDE_AUTO_COMMIT": "true",
    "CLAUDE_AUTO_PUSH": "true",
    "CLAUDE_SKIP_ALL_PROMPTS": "true"
  },
  "permissions": {
    "allow": [
      "Bash(**)",
      "Bash(/Users/*)",
      "Bash(make status:*)",
      "Bash(wsl:*)",
      "Bash(docker logs:*)",
      "Bash(docker restart:*)",
      "Bash(timeout 5 docker logs secondbrain-app --tail 30 -f)",
      "Bash(curl:*)",
      "Bash(timeout 3 docker logs secondbrain-app --tail 20 -f)",
      "Bash(git add:*)",
      "Bash(mkdir:*)",
      "Bash(find:*)",
      "Bash(chmod:*)",
      "Bash(bash:*)",
      "Bash(python3:*)",
      "WebFetch(domain:github.com)",
      "WebFetch(domain:raw.githubusercontent.com)",
      "Bash(git push:*)",
      "Bash(git commit:*)",
      "Bash(echo:*)",
      "WebFetch(domain:docs.anthropic.com)",
      "Bash(ls:*)",
      "Bash(.venv/bin/pip install:*)",
      "Bash(rm:*)",
      "Bash(grep:*)",
      "Bash(docker-compose:*)",
      "Bash(git checkout:*)",
      "Bash(docker exec:*)",
      "Bash(mv:*)",
      "Bash(docker inspect:*)",
      "Bash(python:*)",
      "Bash(.venv/Scripts/python.exe -m pip list:*)",
      "Bash(/Users/dro/Documents/second-brain/.venv/bin/python -m pip list)",
      "Bash(/Users/dro/Documents/second-brain/.venv/bin/python -m pip install pyyaml)",
      "Bash(/Users/dro/Documents/second-brain/.venv/bin/python -m pip install --upgrade pip)",
      "Bash(/Users/dro/Documents/second-brain/.venv/bin/python .claude/scripts/startup-check.py)",
      "Bash(/Users/dro/Documents/second-brain/.venv/bin/python -m pip install:*)",
      "Bash(/Users/dro/Documents/second-brain/.venv/bin/pip install pydantic==2.10.5 asyncpg==0.29.0)",
      "Bash(/Users/dro/Documents/second-brain/.venv/bin/pip list)",
      "Bash(.venv/Scripts/python.exe scripts/test_implemented_services.py:*)",
      "Bash(.venv/bin/python:*)",
      "Bash(docker cp:*)",
      "Bash(/dev/null)",
      "Bash(docker compose exec:*)",
      "Bash(.venv/Scripts/python.exe -m pip install:*)",
      "Bash(git reset:*)",
      "Bash(/Users/dro/Documents/second-brain/.venv/bin/python scripts/test_runner.py:*)",
      "Bash(/Users/dro/Documents/second-brain/.venv/bin/pip install markdown==3.5.2 networkx==3.2.1)",
      "Bash(/Users/dro/Documents/second-brain/.venv/bin/python -m pytest tests/unit/test_basic_functionality.py::TestBasicImports::test_database_mock_import -v)",
      "Bash(/Users/dro/Documents/second-brain/.venv/bin/python -c \"from app.services.knowledge_graph_builder import KnowledgeGraphBuilder; print(''Import successful'')\")",
      "Bash(/Users/dro/Documents/second-brain/.venv/bin/python -c \"from app.services.reasoning_engine import ReasoningEngine; print(''Import successful'')\")",
      "Bash(/Users/dro/Documents/second-brain/.venv/bin/python -c \"import tests.unit.test_websocket_functionality; print(''WebSocket test import successful'')\")",
      "Bash(/Users/dro/Documents/second-brain/.venv/bin/python -c \"import tests.unit.test_service_factory; print(''Service factory test import successful'')\")",
      "Bash(/Users/dro/Documents/second-brain/.venv/bin/python -m pytest tests/unit/test_basic_functionality.py -v --tb=no -q)",
      "Bash(/Users/dro/Documents/second-brain/.venv/bin/python -c \"import ast; ast.parse(open(''tests/unit/test_websocket_functionality.py'').read()); print(''WebSocket test syntax is valid'')\")",
      "Bash(/Users/dro/Documents/second-brain/.venv/bin/python -c \"import ast; ast.parse(open(''tests/unit/test_service_factory.py'').read()); print(''Service factory test syntax is valid'')\")",
      "Bash(sed:*)",
      "Bash(pip install:*)",
      "Bash(/Users/dro/Documents/second-brain/.venv/bin/python -m ruff check app/ --fix)",
      "Bash(/Users/dro/Documents/second-brain/.venv/bin/python -m black app/ tests/)",
      "Bash(/Users/dro/Documents/second-brain/.venv/bin/python /Users/dro/Documents/second-brain/scripts/fix_critical_imports.py)",
      "Bash(/Users/dro/Documents/second-brain/.venv/bin/python -m ruff check app/ --statistics)",
      "Bash(/Users/dro/Documents/second-brain/.venv/bin/python -m ruff check app/ --fix --unsafe-fixes)",
      "Bash(/Users/dro/Documents/second-brain/.venv/bin/python -m ruff check app/ --select=F821 --output-format=concise)",
      "Bash(/Users/dro/Documents/second-brain/.venv/bin/python /Users/dro/Documents/second-brain/scripts/fix_specific_imports.py)",
      "Bash(/Users/dro/Documents/second-brain/.venv/bin/python -m bandit -r app/ -f json -o bandit-report.json)",
      "Bash(true)",
      "Bash(/Users/dro/Documents/second-brain/.venv/bin/python -m bandit -r app/ --severity-level medium --confidence-level medium)",
      "Bash(/Users/dro/Documents/second-brain/.venv/bin/python -m ruff check app/ --select=E722 --output-format=concise)",
      "Bash(/Users/dro/Documents/second-brain/.venv/bin/python /Users/dro/Documents/second-brain/scripts/fix_security_issues.py)",
      "Bash(/Users/dro/Documents/second-brain/.venv/bin/python -m pytest tests/unit/ -v --tb=short --maxfail=10)",
      "Bash(/Users/dro/Documents/second-brain/.venv/bin/python -m pytest tests/unit/test_dependency_injection.py -v --tb=short)",
      "Bash(/Users/dro/Documents/second-brain/.venv/bin/python -m ruff check app/ tests/ --select=E402,F811 --fix)",
      "Bash(/Users/dro/Documents/second-brain/.venv/bin/python -m pytest tests/unit/test_basic_functionality.py -v --tb=short)",
      "Bash(/Users/dro/Documents/second-brain/.venv/bin/python -m pytest tests/unit/ --tb=no -q)",
      "Bash(/Users/dro/Documents/second-brain/.venv/bin/python -m ruff check app/ tests/ --select=F821,E402,F811 --output-format=concise)",
      "Bash(/Users/dro/Documents/second-brain/.venv/bin/python /Users/dro/Documents/second-brain/scripts/fix_import_issues.py)",
      "Bash(/Users/dro/Documents/second-brain/.venv/bin/python -m pytest tests/unit/test_basic_functionality.py::TestBasicImports::test_app_import -v)",
      "Bash(/Users/dro/Documents/second-brain/.venv/bin/python -c \"from app import app; print(''Import successful'')\")",
      "Bash(/Users/dro/Documents/second-brain/.venv/bin/python -c \"from app import app; print(''Import successful'')\")",
      "Bash(/Users/dro/Documents/second-brain/.venv/bin/python -c \"from app import app; print(''Import successful'')\")",
      "Bash(/Users/dro/Documents/second-brain/.venv/bin/python -c \"from app import app; print(''Import successful!'')\")",
      "Bash(/Users/dro/Documents/second-brain/.venv/bin/python /Users/dro/Documents/second-brain/scripts/fix_all_self_imports.py)",
      "Bash(/Users/dro/Documents/second-brain/.venv/bin/python -c \"from app import app; print(''Import successful'')\")",
      "Bash(/Users/dro/Documents/second-brain/.venv/bin/python -c \"from app import app; print(''Import successful'')\")",
      "Bash(/Users/dro/Documents/second-brain/.venv/bin/python -c \"from app import app; print(''Import successful'')\")",
      "Bash(/Users/dro/Documents/second-brain/.venv/bin/python -c \"from app import app; print(''App import:'', ''SUCCESS'')\")",
      "Bash(/Users/dro/Documents/second-brain/.venv/bin/python -m ruff check app/ --select=E999,F821,E901 --output-format=concise)",
      "Bash(/Users/dro/Documents/second-brain/.venv/bin/python -m ruff check app/ --select=E999,F821 --output-format=concise)",
      "Bash(/Users/dro/Documents/second-brain/.venv/bin/python -c \"from app import app; print(''App import: SUCCESS'')\")",
      "Bash(/Users/dro/Documents/second-brain/.venv/bin/python -m uvicorn app.app:app --reload --port 8000)",
      "Bash(/Users/dro/Documents/second-brain/.venv/bin/python /Users/dro/Documents/second-brain/scripts/fix_module_level_imports.py)",
      "Bash(/Users/dro/Documents/second-brain/.venv/bin/python /Users/dro/Documents/second-brain/scripts/fix_redefinitions.py)",
      "Bash(/Users/dro/Documents/second-brain/.venv/bin/python -m ruff check app/ --select=F821,F811,E402 --output-format=concise)",
      "Bash(/Users/dro/Documents/second-brain/.venv/bin/python /Users/dro/Documents/second-brain/scripts/fix_final_imports.py)",
      "Bash(/Users/dro/Documents/second-brain/.venv/bin/python -m ruff check app/ tests/ --statistics)",
      "Bash(touch:*)",
      "Bash(pkill:*)",
      "Bash(cp:*)"
    ],
    "deny": []
  },
  "hooks": {
    "SessionStart": [
      {
        "matcher": "startup",
        "hooks": [
          {
            "type": "command",
            "command": "/Users/dro/.claude-second-brain-startup.sh"
          }
        ]
      }
    ],
    "UserPromptSubmit": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "/Users/dro/.claude-second-brain-check-prompt.sh"
          }
        ]
      }
    ]
  }
}