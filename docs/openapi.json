{
  "openapi": "3.1.0",
  "info": {
    "title": "Second Brain API [Development]",
    "description": "Single-user memory management system with advanced features",
    "version": "4.2.3"
  },
  "paths": {
    "/api/v2/memories/": {
      "post": {
        "tags": [
          "Memories",
          "Memories"
        ],
        "summary": "Create a new memory",
        "description": "Store a new memory with automatic importance scoring and tagging",
        "operationId": "create_memory_api_v2_memories__post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MemoryCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemoryResponse"
                }
              }
            }
          },
          "404": {
            "description": "Memory not found"
          },
          "500": {
            "description": "Internal server error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Memories",
          "Memories"
        ],
        "summary": "List memories",
        "description": "List all memories with optional filtering and pagination",
        "operationId": "list_memories_api_v2_memories__get",
        "parameters": [
          {
            "name": "memory_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by memory type",
              "title": "Memory Type"
            },
            "description": "Filter by memory type"
          },
          {
            "name": "tags",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by tags",
              "title": "Tags"
            },
            "description": "Filter by tags"
          },
          {
            "name": "importance_min",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "number",
                  "maximum": 1,
                  "minimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "title": "Importance Min"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Items per page",
              "default": 20,
              "title": "Page Size"
            },
            "description": "Items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemoriesResponse"
                }
              }
            }
          },
          "404": {
            "description": "Memory not found"
          },
          "500": {
            "description": "Internal server error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/memories/{memory_id}": {
      "get": {
        "tags": [
          "Memories",
          "Memories"
        ],
        "summary": "Get a specific memory",
        "description": "Retrieve a memory by its ID",
        "operationId": "get_memory_api_v2_memories__memory_id__get",
        "parameters": [
          {
            "name": "memory_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Memory Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemoryResponse"
                }
              }
            }
          },
          "404": {
            "description": "Memory not found"
          },
          "500": {
            "description": "Internal server error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Memories",
          "Memories"
        ],
        "summary": "Update a memory",
        "description": "Update a memory with partial data",
        "operationId": "update_memory_api_v2_memories__memory_id__patch",
        "parameters": [
          {
            "name": "memory_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Memory Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MemoryUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemoryResponse"
                }
              }
            }
          },
          "404": {
            "description": "Memory not found"
          },
          "500": {
            "description": "Internal server error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Memories",
          "Memories"
        ],
        "summary": "Delete a memory",
        "description": "Permanently delete a memory",
        "operationId": "delete_memory_api_v2_memories__memory_id__delete",
        "parameters": [
          {
            "name": "memory_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Memory Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Memory not found"
          },
          "500": {
            "description": "Internal server error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/search/": {
      "post": {
        "tags": [
          "Search",
          "Search"
        ],
        "summary": "Search memories",
        "description": "Perform advanced search across all memories",
        "operationId": "search_memories_api_v2_search__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__routes__v2__search__SearchResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid search parameters"
          },
          "500": {
            "description": "Search service error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/search/semantic": {
      "post": {
        "tags": [
          "Search",
          "Search"
        ],
        "summary": "Semantic search",
        "description": "Search using semantic similarity (requires vector embeddings)",
        "operationId": "semantic_search_api_v2_search_semantic_post",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Query"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "title": "Limit"
            }
          },
          {
            "name": "threshold",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 0.7,
              "title": "Threshold"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__routes__v2__search__SearchResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid search parameters"
          },
          "500": {
            "description": "Search service error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/search/keyword": {
      "post": {
        "tags": [
          "Search",
          "Search"
        ],
        "summary": "Keyword search",
        "description": "Traditional keyword-based search",
        "operationId": "keyword_search_api_v2_search_keyword_post",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Query"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__routes__v2__search__SearchResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid search parameters"
          },
          "500": {
            "description": "Search service error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/search/suggestions": {
      "get": {
        "tags": [
          "Advanced Search",
          "Advanced Search"
        ],
        "summary": "Get search suggestions",
        "description": "Get search suggestions based on history",
        "operationId": "get_search_suggestions_api_v2_search_suggestions_get",
        "parameters": [
          {
            "name": "prefix",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 2,
              "description": "Search prefix",
              "title": "Prefix"
            },
            "description": "Search prefix"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 20,
              "minimum": 1,
              "description": "Maximum suggestions",
              "default": 5,
              "title": "Limit"
            },
            "description": "Maximum suggestions"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Memory not found"
          },
          "503": {
            "description": "Service unavailable"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/search/vector": {
      "post": {
        "tags": [
          "Advanced Search",
          "Advanced Search"
        ],
        "summary": "Vector similarity search",
        "description": "Search using vector embeddings for semantic similarity",
        "operationId": "vector_search_api_v2_search_vector_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VectorSearchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__routes__v2__search_advanced__SearchResponse"
                }
              }
            }
          },
          "404": {
            "description": "Memory not found"
          },
          "503": {
            "description": "Service unavailable"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/search/hybrid": {
      "post": {
        "tags": [
          "Advanced Search",
          "Advanced Search"
        ],
        "summary": "Hybrid search",
        "description": "Combine vector and text search for best results",
        "operationId": "hybrid_search_api_v2_search_hybrid_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HybridSearchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__routes__v2__search_advanced__SearchResponse"
                }
              }
            }
          },
          "404": {
            "description": "Memory not found"
          },
          "503": {
            "description": "Service unavailable"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/search/related": {
      "post": {
        "tags": [
          "Advanced Search",
          "Advanced Search"
        ],
        "summary": "Find related memories",
        "description": "Find memories related through explicit relationships",
        "operationId": "find_related_api_v2_search_related_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipSearchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__routes__v2__search_advanced__SearchResponse"
                }
              }
            }
          },
          "404": {
            "description": "Memory not found"
          },
          "503": {
            "description": "Service unavailable"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/search/knowledge-graph/{memory_id}": {
      "get": {
        "tags": [
          "Advanced Search",
          "Advanced Search"
        ],
        "summary": "Build knowledge graph",
        "description": "Build a knowledge graph around a memory",
        "operationId": "build_knowledge_graph_api_v2_search_knowledge_graph__memory_id__get",
        "parameters": [
          {
            "name": "memory_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Memory Id"
            }
          },
          {
            "name": "depth",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 3,
              "minimum": 1,
              "description": "Graph traversal depth",
              "default": 2,
              "title": "Depth"
            },
            "description": "Graph traversal depth"
          },
          {
            "name": "min_strength",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "maximum": 1.0,
              "minimum": 0.0,
              "description": "Minimum relationship strength",
              "default": 0.5,
              "title": "Min Strength"
            },
            "description": "Minimum relationship strength"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KnowledgeGraphResponse"
                }
              }
            }
          },
          "404": {
            "description": "Memory not found"
          },
          "503": {
            "description": "Service unavailable"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/search/duplicates": {
      "get": {
        "tags": [
          "Advanced Search",
          "Advanced Search"
        ],
        "summary": "Find duplicate memories",
        "description": "Find potentially duplicate memories based on similarity",
        "operationId": "find_duplicates_api_v2_search_duplicates_get",
        "parameters": [
          {
            "name": "similarity_threshold",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "maximum": 1.0,
              "minimum": 0.8,
              "description": "Similarity threshold",
              "default": 0.95,
              "title": "Similarity Threshold"
            },
            "description": "Similarity threshold"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Maximum pairs to return",
              "default": 10,
              "title": "Limit"
            },
            "description": "Maximum pairs to return"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DuplicateCheckResponse"
                }
              }
            }
          },
          "404": {
            "description": "Memory not found"
          },
          "503": {
            "description": "Service unavailable"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/search/consolidate-duplicates": {
      "post": {
        "tags": [
          "Advanced Search",
          "Advanced Search"
        ],
        "summary": "Consolidate duplicate memories",
        "description": "Automatically consolidate duplicate memories",
        "operationId": "consolidate_duplicates_api_v2_search_consolidate_duplicates_post",
        "parameters": [
          {
            "name": "similarity_threshold",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "maximum": 1.0,
              "minimum": 0.8,
              "description": "Similarity threshold",
              "default": 0.95,
              "title": "Similarity Threshold"
            },
            "description": "Similarity threshold"
          },
          {
            "name": "dry_run",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Perform dry run without changes",
              "default": true,
              "title": "Dry Run"
            },
            "description": "Perform dry run without changes"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Memory not found"
          },
          "503": {
            "description": "Service unavailable"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/search/reindex": {
      "post": {
        "tags": [
          "Advanced Search",
          "Advanced Search"
        ],
        "summary": "Reindex memories",
        "description": "Regenerate embeddings and search indexes",
        "operationId": "reindex_memories_api_v2_search_reindex_post",
        "parameters": [
          {
            "name": "batch_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Batch size for processing",
              "default": 20,
              "title": "Batch Size"
            },
            "description": "Batch size for processing"
          },
          {
            "name": "max_memories",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 10000,
              "minimum": 1,
              "description": "Maximum memories to process",
              "default": 1000,
              "title": "Max Memories"
            },
            "description": "Maximum memories to process"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Memory not found"
          },
          "503": {
            "description": "Service unavailable"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/health": {
      "get": {
        "tags": [
          "System",
          "System"
        ],
        "summary": "Health check",
        "description": "Comprehensive health check for monitoring",
        "operationId": "health_check_api_v2_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthCheck"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable"
          }
        }
      }
    },
    "/api/v2/health/live": {
      "get": {
        "tags": [
          "System",
          "System"
        ],
        "summary": "Liveness probe",
        "description": "Simple liveness check for Kubernetes",
        "operationId": "liveness_probe_api_v2_health_live_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "503": {
            "description": "Service unavailable"
          }
        }
      }
    },
    "/api/v2/health/ready": {
      "get": {
        "tags": [
          "System",
          "System"
        ],
        "summary": "Readiness probe",
        "description": "Check if service is ready to accept traffic",
        "operationId": "readiness_probe_api_v2_health_ready_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadinessCheck"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable"
          }
        }
      }
    },
    "/api/v2/metrics": {
      "get": {
        "tags": [
          "System",
          "System"
        ],
        "summary": "System metrics",
        "description": "Get system resource metrics",
        "operationId": "get_metrics_api_v2_metrics_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemMetrics"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable"
          }
        }
      }
    },
    "/api/v2/degradation": {
      "get": {
        "tags": [
          "System",
          "System"
        ],
        "summary": "Degradation status",
        "description": "Get current service degradation status",
        "operationId": "get_degradation_status_api_v2_degradation_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "503": {
            "description": "Service unavailable"
          }
        }
      }
    },
    "/api/v2/info": {
      "get": {
        "tags": [
          "System",
          "System"
        ],
        "summary": "System information",
        "description": "Get detailed system information",
        "operationId": "get_system_info_api_v2_info_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "503": {
            "description": "Service unavailable"
          }
        }
      }
    },
    "/": {
      "get": {
        "summary": "Root",
        "description": "Root endpoint with environment info",
        "operationId": "root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "summary": "Health",
        "description": "Basic health check",
        "operationId": "health_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "DuplicateCheckResponse": {
        "properties": {
          "duplicates": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Duplicates"
          },
          "total_found": {
            "type": "integer",
            "title": "Total Found"
          },
          "similarity_threshold": {
            "type": "number",
            "title": "Similarity Threshold"
          }
        },
        "type": "object",
        "required": [
          "duplicates",
          "total_found",
          "similarity_threshold"
        ],
        "title": "DuplicateCheckResponse",
        "description": "Duplicate check response"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "HealthCheck": {
        "properties": {
          "status": {
            "$ref": "#/components/schemas/HealthStatus"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          },
          "version": {
            "type": "string",
            "title": "Version"
          },
          "environment": {
            "type": "string",
            "title": "Environment"
          },
          "uptime_seconds": {
            "type": "number",
            "title": "Uptime Seconds"
          },
          "checks": {
            "additionalProperties": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "object",
            "title": "Checks"
          }
        },
        "type": "object",
        "required": [
          "status",
          "version",
          "environment",
          "uptime_seconds"
        ],
        "title": "HealthCheck",
        "description": "Health check response"
      },
      "HealthStatus": {
        "type": "string",
        "enum": [
          "healthy",
          "degraded",
          "unhealthy",
          "starting",
          "stopping"
        ],
        "title": "HealthStatus",
        "description": "Health status levels"
      },
      "HybridSearchRequest": {
        "properties": {
          "query": {
            "type": "string",
            "title": "Query",
            "description": "Search query"
          },
          "limit": {
            "type": "integer",
            "maximum": 100.0,
            "minimum": 1.0,
            "title": "Limit",
            "description": "Maximum results",
            "default": 10
          },
          "vector_weight": {
            "type": "number",
            "maximum": 1.0,
            "minimum": 0.0,
            "title": "Vector Weight",
            "description": "Weight for vector search (0=text only, 1=vector only)",
            "default": 0.5
          },
          "min_score": {
            "type": "number",
            "maximum": 1.0,
            "minimum": 0.0,
            "title": "Min Score",
            "description": "Minimum combined score",
            "default": 0.0
          },
          "filters": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filters",
            "description": "Additional filters"
          }
        },
        "type": "object",
        "required": [
          "query"
        ],
        "title": "HybridSearchRequest",
        "description": "Hybrid search combining vector and text"
      },
      "KnowledgeGraphResponse": {
        "properties": {
          "nodes": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Nodes"
          },
          "edges": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Edges"
          },
          "center": {
            "type": "string",
            "title": "Center"
          },
          "depth": {
            "type": "integer",
            "title": "Depth"
          }
        },
        "type": "object",
        "required": [
          "nodes",
          "edges",
          "center",
          "depth"
        ],
        "title": "KnowledgeGraphResponse",
        "description": "Knowledge graph response"
      },
      "MemoriesResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "memories": {
            "items": {
              "$ref": "#/components/schemas/Memory"
            },
            "type": "array",
            "title": "Memories"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "title": "Page"
          },
          "page_size": {
            "type": "integer",
            "title": "Page Size"
          },
          "has_next": {
            "type": "boolean",
            "title": "Has Next"
          },
          "has_prev": {
            "type": "boolean",
            "title": "Has Prev"
          }
        },
        "type": "object",
        "required": [
          "success",
          "memories",
          "total",
          "page",
          "page_size",
          "has_next",
          "has_prev"
        ],
        "title": "MemoriesResponse",
        "description": "Multiple memories response with pagination"
      },
      "Memory": {
        "properties": {
          "content": {
            "type": "string",
            "maxLength": 50000,
            "minLength": 1,
            "title": "Content",
            "description": "Memory content"
          },
          "memory_type": {
            "type": "string",
            "title": "Memory Type",
            "description": "Type of memory",
            "default": "generic"
          },
          "importance_score": {
            "type": "number",
            "maximum": 1.0,
            "minimum": 0.0,
            "title": "Importance Score",
            "description": "Importance score",
            "default": 0.5
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "maxItems": 20,
            "title": "Tags"
          },
          "metadata": {
            "additionalProperties": true,
            "type": "object",
            "title": "Metadata"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "access_count": {
            "type": "integer",
            "title": "Access Count",
            "default": 0
          },
          "last_accessed": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Accessed"
          }
        },
        "type": "object",
        "required": [
          "content",
          "id",
          "created_at",
          "updated_at"
        ],
        "title": "Memory",
        "description": "Complete memory model"
      },
      "MemoryCreate": {
        "properties": {
          "content": {
            "type": "string",
            "maxLength": 50000,
            "minLength": 1,
            "title": "Content",
            "description": "Memory content"
          },
          "memory_type": {
            "type": "string",
            "title": "Memory Type",
            "description": "Type of memory",
            "default": "generic"
          },
          "importance_score": {
            "type": "number",
            "maximum": 1.0,
            "minimum": 0.0,
            "title": "Importance Score",
            "description": "Importance score",
            "default": 0.5
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "maxItems": 20,
            "title": "Tags"
          },
          "metadata": {
            "additionalProperties": true,
            "type": "object",
            "title": "Metadata"
          },
          "embedding_model": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Embedding Model",
            "description": "Embedding model to use",
            "default": "text-embedding-ada-002"
          },
          "auto_tag": {
            "type": "boolean",
            "title": "Auto Tag",
            "description": "Automatically generate tags",
            "default": true
          },
          "auto_importance": {
            "type": "boolean",
            "title": "Auto Importance",
            "description": "Automatically calculate importance",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "content"
        ],
        "title": "MemoryCreate",
        "description": "Memory creation request"
      },
      "MemoryResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "memory": {
            "$ref": "#/components/schemas/Memory"
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "success",
          "memory"
        ],
        "title": "MemoryResponse",
        "description": "Standard memory response"
      },
      "MemoryUpdate": {
        "properties": {
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content"
          },
          "memory_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Memory Type"
          },
          "importance_score": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 1.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Importance Score"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          }
        },
        "type": "object",
        "title": "MemoryUpdate",
        "description": "Memory update request - all fields optional"
      },
      "ReadinessCheck": {
        "properties": {
          "ready": {
            "type": "boolean",
            "title": "Ready"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          },
          "services": {
            "additionalProperties": {
              "type": "boolean"
            },
            "type": "object",
            "title": "Services"
          },
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "ready",
          "services",
          "message"
        ],
        "title": "ReadinessCheck",
        "description": "Readiness check response"
      },
      "RelationshipSearchRequest": {
        "properties": {
          "memory_id": {
            "type": "string",
            "title": "Memory Id",
            "description": "Source memory ID"
          },
          "relationship_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Relationship Type",
            "description": "Filter by relationship type"
          },
          "min_strength": {
            "type": "number",
            "maximum": 1.0,
            "minimum": 0.0,
            "title": "Min Strength",
            "description": "Minimum relationship strength",
            "default": 0.0
          },
          "depth": {
            "type": "integer",
            "maximum": 3.0,
            "minimum": 1.0,
            "title": "Depth",
            "description": "Depth for graph traversal",
            "default": 1
          },
          "limit": {
            "type": "integer",
            "maximum": 50.0,
            "minimum": 1.0,
            "title": "Limit",
            "description": "Maximum results per level",
            "default": 10
          }
        },
        "type": "object",
        "required": [
          "memory_id"
        ],
        "title": "RelationshipSearchRequest",
        "description": "Search for related memories"
      },
      "SearchRequest": {
        "properties": {
          "query": {
            "type": "string",
            "maxLength": 1000,
            "minLength": 1,
            "title": "Query",
            "description": "Search query"
          },
          "search_type": {
            "type": "string",
            "pattern": "^(keyword|semantic|hybrid)$",
            "title": "Search Type",
            "description": "Type of search",
            "default": "hybrid"
          },
          "filters": {
            "additionalProperties": true,
            "type": "object",
            "title": "Filters",
            "description": "Additional filters"
          },
          "limit": {
            "type": "integer",
            "maximum": 100.0,
            "minimum": 1.0,
            "title": "Limit",
            "description": "Maximum results to return",
            "default": 10
          },
          "offset": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Offset",
            "description": "Offset for pagination",
            "default": 0
          },
          "include_similar": {
            "type": "boolean",
            "title": "Include Similar",
            "description": "Include similar memories",
            "default": true
          },
          "similarity_threshold": {
            "type": "number",
            "maximum": 1.0,
            "minimum": 0.0,
            "title": "Similarity Threshold",
            "description": "Minimum similarity score",
            "default": 0.7
          }
        },
        "type": "object",
        "required": [
          "query"
        ],
        "title": "SearchRequest",
        "description": "Advanced search request"
      },
      "SearchResult": {
        "properties": {
          "memory": {
            "$ref": "#/components/schemas/Memory"
          },
          "score": {
            "type": "number",
            "title": "Score",
            "description": "Relevance score"
          },
          "match_type": {
            "type": "string",
            "title": "Match Type",
            "description": "Type of match (exact, semantic, keyword)"
          },
          "highlights": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Highlights",
            "description": "Highlighted snippets"
          }
        },
        "type": "object",
        "required": [
          "memory",
          "score",
          "match_type"
        ],
        "title": "SearchResult",
        "description": "Individual search result"
      },
      "SystemMetrics": {
        "properties": {
          "cpu_percent": {
            "type": "number",
            "title": "Cpu Percent"
          },
          "memory_usage_mb": {
            "type": "number",
            "title": "Memory Usage Mb"
          },
          "memory_percent": {
            "type": "number",
            "title": "Memory Percent"
          },
          "disk_usage_percent": {
            "type": "number",
            "title": "Disk Usage Percent"
          },
          "open_connections": {
            "type": "integer",
            "title": "Open Connections"
          },
          "memories_loaded": {
            "type": "integer",
            "title": "Memories Loaded"
          },
          "container_id": {
            "type": "string",
            "title": "Container Id"
          }
        },
        "type": "object",
        "required": [
          "cpu_percent",
          "memory_usage_mb",
          "memory_percent",
          "disk_usage_percent",
          "open_connections",
          "memories_loaded",
          "container_id"
        ],
        "title": "SystemMetrics",
        "description": "System metrics response"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "VectorSearchRequest": {
        "properties": {
          "query": {
            "type": "string",
            "title": "Query",
            "description": "Search query for embedding generation"
          },
          "limit": {
            "type": "integer",
            "maximum": 100.0,
            "minimum": 1.0,
            "title": "Limit",
            "description": "Maximum results",
            "default": 10
          },
          "min_similarity": {
            "type": "number",
            "maximum": 1.0,
            "minimum": 0.0,
            "title": "Min Similarity",
            "description": "Minimum similarity score",
            "default": 0.7
          },
          "generate_embedding": {
            "type": "boolean",
            "title": "Generate Embedding",
            "description": "Generate embedding from query",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "query"
        ],
        "title": "VectorSearchRequest",
        "description": "Vector similarity search request"
      },
      "app__routes__v2__search__SearchResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "results": {
            "items": {
              "$ref": "#/components/schemas/SearchResult"
            },
            "type": "array",
            "title": "Results"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "query": {
            "type": "string",
            "title": "Query"
          },
          "search_type": {
            "type": "string",
            "title": "Search Type"
          },
          "processing_time_ms": {
            "type": "number",
            "title": "Processing Time Ms"
          }
        },
        "type": "object",
        "required": [
          "success",
          "results",
          "total",
          "query",
          "search_type",
          "processing_time_ms"
        ],
        "title": "SearchResponse",
        "description": "Search response with results and metadata"
      },
      "app__routes__v2__search_advanced__SearchResponse": {
        "properties": {
          "results": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Results"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "search_type": {
            "type": "string",
            "title": "Search Type"
          },
          "execution_time_ms": {
            "type": "number",
            "title": "Execution Time Ms"
          }
        },
        "type": "object",
        "required": [
          "results",
          "total",
          "search_type",
          "execution_time_ms"
        ],
        "title": "SearchResponse",
        "description": "Search result response"
      }
    }
  }
}
