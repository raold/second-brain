apiVersion: v1
kind: Namespace
metadata:
  name: second-brain-users
---
# Template for deploying a single user's brain container
# This would be created dynamically per user by management API
apiVersion: apps/v1
kind: Deployment
metadata:
  name: brain-${USER_ID}
  namespace: second-brain-users
  labels:
    app: second-brain
    user: ${USER_ID}
    tier: ${USER_TIER}  # free, pro, enterprise
spec:
  replicas: 1
  selector:
    matchLabels:
      app: second-brain
      user: ${USER_ID}
  template:
    metadata:
      labels:
        app: second-brain
        user: ${USER_ID}
    spec:
      containers:
      - name: second-brain
        image: second-brain:v4.1.0-single-user
        ports:
        - containerPort: 8000
        env:
        - name: CONTAINER_API_KEY
          valueFrom:
            secretKeyRef:
              name: brain-${USER_ID}-secret
              key: api-key
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: platform-secrets
              key: openai-api-key
        - name: MEMORY_PERSIST_PATH
          value: /data/memories.json
        - name: ENVIRONMENT
          value: production
        resources:
          requests:
            memory: ${MEMORY_REQUEST}  # Based on tier: 512Mi, 2Gi, 8Gi
            cpu: ${CPU_REQUEST}        # Based on tier: 0.25, 1, 4
          limits:
            memory: ${MEMORY_LIMIT}    # Based on tier: 1Gi, 4Gi, 16Gi
            cpu: ${CPU_LIMIT}          # Based on tier: 0.5, 2, 8
        volumeMounts:
        - name: memory-storage
          mountPath: /data
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: memory-storage
        persistentVolumeClaim:
          claimName: brain-${USER_ID}-pvc
---
# Persistent storage for user's memories
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: brain-${USER_ID}-pvc
  namespace: second-brain-users
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: fast-ssd
  resources:
    requests:
      storage: ${STORAGE_SIZE}  # Based on tier: 1Gi, 10Gi, 100Gi
---
# Service for accessing user's brain
apiVersion: v1
kind: Service
metadata:
  name: brain-${USER_ID}-svc
  namespace: second-brain-users
spec:
  selector:
    app: second-brain
    user: ${USER_ID}
  ports:
  - port: 80
    targetPort: 8000
  type: ClusterIP
---
# Secret for user's API key
apiVersion: v1
kind: Secret
metadata:
  name: brain-${USER_ID}-secret
  namespace: second-brain-users
type: Opaque
data:
  api-key: ${USER_API_KEY_BASE64}  # Generated unique key per user
---
# HorizontalPodAutoscaler for premium users
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: brain-${USER_ID}-hpa
  namespace: second-brain-users
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: brain-${USER_ID}
  minReplicas: 1
  maxReplicas: ${MAX_REPLICAS}  # Based on tier: 1, 3, 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80